name: Vercel Deployment Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - production

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Preview deployments for PRs and develop branch
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    environment: preview
    outputs:
      preview-url: ${{ steps.deploy.outputs.preview-url }}
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel (Preview)
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--target=preview'
          working-directory: ./

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Preview Deployment Ready!**\n\nüîó **Preview URL**: ${context.outputs.preview-url}\n\nüì± Test your changes before merging to main.\n\n---\n*This preview will be automatically removed when the PR is closed.*`
            })

      - name: Notify deployment success
        if: success()
        run: |
          echo "‚úÖ Preview deployment successful!"
          echo "Preview URL: ${{ steps.deploy.outputs.preview-url }}"
          echo "Deployment URL: ${{ steps.deploy.outputs.deployment-url }}"

  # Production deployment for main branch
  deploy-production:
    runs-on: ubuntu-latest
    needs: []
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    outputs:
      production-url: ${{ steps.deploy.outputs.production-url }}
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Build project
        run: npm run build

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Deploy to Vercel (Production)
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      - name: Notify production deployment
        if: success()
        run: |
          echo "üöÄ Production deployment successful!"
          echo "Production URL: ${{ steps.deploy.outputs.production-url }}"
          echo "Deployment URL: ${{ steps.deploy.outputs.deployment-url }}"

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.outputs.deployment-url,
              state: 'success',
              environment_url: '${{ steps.deploy.outputs.production-url }}',
              description: 'Production deployment successful'
            })

  # Manual deployment trigger
  deploy-manual:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel (Manual)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: ${{ github.event.inputs.environment == 'production' && '--prod' || '--target=preview' }}
          working-directory: ./

      - name: Notify manual deployment
        run: |
          echo "üîß Manual deployment to ${{ github.event.inputs.environment }} completed!"

  # Post-deployment verification
  verify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-production, deploy-preview, deploy-manual]
    if: always() && (needs.deploy-production.result == 'success' || needs.deploy-preview.result == 'success' || needs.deploy-manual.result == 'success')

    steps:
      - name: Check deployment health
        run: |
          echo "üîç Checking deployment health..."
          # Add health check logic here if needed
          echo "‚úÖ Deployment verification completed"

      - name: Update deployment status
        if: always()
        run: |
          echo "üìä Deployment pipeline completed"
          echo "Check Vercel dashboard for detailed metrics"
